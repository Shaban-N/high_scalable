#!/usr/bin/env node

var app = require('../app');
var debug = require('debug')('high-scalable:server');
var http = require('http');
var config=require('../config');
var Logger=require('../logs/index.js');
var logger=new Logger();

var port=3000;//process.env.PORT || config.get('port')


app.listen(port,function(err){
    if(err) throw err;
    var date=new Date();
    var time = date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();
    logger.log(`Running server at port ${port}!`+time)
});

app.on('error', onError);
//server.on('listening', onListening);


/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
